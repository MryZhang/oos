language: cpp

sudo: false

matrix:
  include:
#    - os: osx
#      compiler: gcc
#      addons:
#        apt:
#          sources: ['ubuntu-toolchain-r-test']
#          packages: ['g++-4.8', 'valgrind']
#      env: COMPILER=g++-4.8
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-4.8', 'valgrind']
      env: COMPILER=g++-4.8 GCOV=gcov-4.8

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-4.9', 'valgrind']
      env: COMPILER=g++-4.9 GCOV=gcov-4.9

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-5', 'valgrind']
      env: COMPILER=g++-5 GCOV=gcov-5

    - os: linux
      compiler: clang
      env: COMPILER=clang++
      addons:
        apt:
          packages: ['valgrind']

    - os: linux
      compiler: clang
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.5']
          packages: ['clang-3.5', 'valgrind']
      env: COMPILER=clang++-3.5

    - os: linux
      compiler: clang
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.6']
          packages: ['clang-3.6', 'valgrind']
      env: COMPILER=clang++-3.6
#env:
#  global:
   # The next declration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
#   - secure: "alRiwZmJVN9Cdu0sPKUtt7NX72ok9R1Lg/UU6cuVmTvqezMovlP67JG9yotl0Gu7qbGcqdyGJrYtSNTndAYAh0udPAG4kvV0Bb7gdyrbcuIM6y9HYvUOKOjnxirDEvy3D16jtqw3FR88T/4fWz5iSLVwepJ2JGLcgM2Y0lHisFw="

#addons:
#  coverity_scan:
#    project:
#      name: "zussel/oos"
#      description: "Store all your objects in one container"
#    notification_email: sascha.kuehl@gmx.net
#    build_command_prepend:
#    build_command:
#    branch_pattern: coverity_scan

before_script:
  - mysql -e 'create database oos_test;'
  - mkdir build
  - cd build
  - if [ "$GCOV" == "gcov-5" ]; then cmake -DCMAKE_CXX_COMPILER=${COMPILER} -DGCOV_BINARY=${GCOV} -DCMAKE_BUILD_TYPE=Debug -DCOVERALLS=true -DMYSQL_CONNECTION_STRING:STRING="mysql://root@127.0.0.1/oos_test" ..; fi
  - if [ "$GCOV" != "gcov-5" ]; then cmake -DCMAKE_CXX_COMPILER=${COMPILER} -DCMAKE_BUILD_TYPE=Debug -DMYSQL_CONNECTION_STRING:STRING="mysql://root@127.0.0.1/oos_test" ..; fi

script:
  - make
  - make test ARGS=-V

after_success:
  - if [ "$GCOV" == "gcov-5" ]; then make coveralls; fi
  - if [ "$GCOV" == "gcov-5" ]; then ./coveralls-upload; fi

branches:
  only:
    - develop
    - master

notifications:
  email:
    recipients:
      - sascha.kuehl@gmx.net
  on_success: change # [always|never|change] # default: change
  on_failure: always # [always|never|change] # default: always
